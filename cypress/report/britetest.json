{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-08-05T11:06:27.298Z",
    "end": "2024-08-05T11:11:51.745Z",
    "duration": 324447
  },
  "results": [
    {
      "uuid": "13991df1-bff6-4d67-8c97-874e060a6fa2",
      "title": "",
      "fullFile": "cypress\\e2e\\imdbTests.cy.js",
      "file": "cypress\\e2e\\imdbTests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b28ea2bb-aea9-43da-970e-5f97db5c860b",
          "title": "Brite Test Frontend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test top box office",
              "fullTitle": "Brite Test Frontend Test top box office",
              "timedOut": null,
              "duration": 56309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landingPage.menuBar('Top Box Office');\nlandingPage.clickByContains('2.');\nmoviePage.imdbRating();\nmoviePage.userRatingOption();\nmoviePage.rateMovie();",
              "err": {},
              "uuid": "ffbdb9ba-e4fe-46dd-bec1-b148221d5a2c",
              "parentUUID": "b28ea2bb-aea9-43da-970e-5f97db5c860b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test top 250 TV Shows",
              "fullTitle": "Brite Test Frontend Test top 250 TV Shows",
              "timedOut": null,
              "duration": 70460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landingPage.menuBar('Top 250 TV Shows');\nlandingPage.clickByContains('Breaking Bad');\nmoviePage.openPhotos();\nmoviePage.openGallery();\nmoviePage.openGalleryFilter();\nmoviePage.openMorePeople();\nmoviePage.selectPhoto();",
              "err": {},
              "uuid": "8599184f-f1a6-4443-8827-57deca517e40",
              "parentUUID": "b28ea2bb-aea9-43da-970e-5f97db5c860b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test born today section",
              "fullTitle": "Brite Test Frontend Test born today section",
              "timedOut": null,
              "duration": 62104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landingPage.menuBar('Born Today');\nlandingPage.clickByContains('Birthday:');\nlandingPage.clickByContains('Birthday');\nbornTodayPage.searchByBirthday();\nbornTodayPage.takeScreen('Third profile born yesterday');",
              "err": {},
              "uuid": "c61fdf8c-e71d-4389-92ec-42226c9f6c43",
              "parentUUID": "b28ea2bb-aea9-43da-970e-5f97db5c860b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test born 40 years ago today ",
              "fullTitle": "Brite Test Frontend Test born 40 years ago today ",
              "timedOut": null,
              "duration": 57233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landingPage.menuBar('Born Today');\nlandingPage.clickByContains('Birthday:');\nlandingPage.clickByContains('Birth date');\nbornTodayPage.searchByBirthDate();\nbornTodayPage.takeScreen('First link in description');",
              "err": {},
              "uuid": "6927f8b4-1a8c-451c-b189-b86169c59d72",
              "parentUUID": "b28ea2bb-aea9-43da-970e-5f97db5c860b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffbdb9ba-e4fe-46dd-bec1-b148221d5a2c",
            "8599184f-f1a6-4443-8827-57deca517e40",
            "c61fdf8c-e71d-4389-92ec-42226c9f6c43",
            "6927f8b4-1a8c-451c-b189-b86169c59d72"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 246106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6c52c53-a23e-4e68-bbfa-16d7c3762081",
      "title": "",
      "fullFile": "cypress\\e2e\\poke-api-tests.cy.js",
      "file": "cypress\\e2e\\poke-api-tests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0922c9bd-e783-45af-8c0d-7b44f65727c3",
          "title": "Brite Test Backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test berry by id ",
              "fullTitle": "Brite Test Backend Test berry by id ",
              "timedOut": null,
              "duration": 561,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('Get berry by id success scenario');\ncy.getBerry('1').then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.be.eq(200);\n  expect(response.body).to.be.jsonSchema(berrySuccessSchema);\n});\ncy.log('Get berry by id failure scenario');\ncy.getBerry('1q').then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.be.eq(404);\n  expect(response.body).to.be.eq('Not Found');\n});",
              "err": {},
              "uuid": "35d8fe6e-9988-4a8b-b67d-d9454e3c7537",
              "parentUUID": "0922c9bd-e783-45af-8c0d-7b44f65727c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test berry by name ",
              "fullTitle": "Brite Test Backend Test berry by name ",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('Get berry by name success scenario');\ncy.getBerry('sitrus').then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.be.eq(200);\n  expect(response.body).to.be.jsonSchema(berrySuccessSchema);\n});\ncy.log('Get berry by name failure scenario');\ncy.getBerry('Brite').then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.be.eq(404);\n  expect(response.body).to.be.eq('Not Found');\n});",
              "err": {},
              "uuid": "f91dbc62-41bd-4e38-ad11-b6b35e893cc4",
              "parentUUID": "0922c9bd-e783-45af-8c0d-7b44f65727c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test berry-flavor by name ",
              "fullTitle": "Brite Test Backend Test berry-flavor by name ",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('Get list of all berries with sweet flavor');\ncy.getBerryByFlavor('sweet').then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.be.eq(200);\n  expect(response.body).to.be.jsonSchema(berryFlavorSuccessSchema);\n});",
              "err": {},
              "uuid": "8126be8e-6235-44ed-8cd4-152c6aeccfd8",
              "parentUUID": "0922c9bd-e783-45af-8c0d-7b44f65727c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find berry with high potency in spicy flavor",
              "fullTitle": "Brite Test Backend Find berry with high potency in spicy flavor",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('Get list of all berries with spicy flavor');\nvar potencyVal = 0;\nvar berryName = 'a';\ncy.getBerryByFlavor('spicy').then(response => {\n  var resBody = response.body;\n  //cy.log(resBody.berries.length)\n  for (var i = 0; i < resBody.berries.length; i++) {\n    if (resBody.berries[i].potency > potencyVal) {\n      potencyVal = resBody.berries[i].potency;\n      berryName = resBody.berries[i].berry.name;\n    }\n    //cy.log(resBody.berries[i].berry.name, berryName , resBody.berries[i].potency , potencyVal)\n  }\n  cy.log(berryName + ' has the highest potency value of ' + potencyVal + ' in spicy flavour');\n  cy.getBerry(berryName).then(response => {\n    cy.log(JSON.stringify(response.body));\n    expect(response.status).to.be.eq(200);\n    expect(response.body).to.be.jsonSchema(berrySuccessSchema);\n  });\n});",
              "err": {},
              "uuid": "702d6cb9-428b-4afd-9a9f-13c16851f933",
              "parentUUID": "0922c9bd-e783-45af-8c0d-7b44f65727c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35d8fe6e-9988-4a8b-b67d-d9454e3c7537",
            "f91dbc62-41bd-4e38-ad11-b6b35e893cc4",
            "8126be8e-6235-44ed-8cd4-152c6aeccfd8",
            "702d6cb9-428b-4afd-9a9f-13c16851f933"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75d439ff-c4a7-48e3-a469-fafa86ba6597",
      "title": "",
      "fullFile": "cypress\\e2e\\actorUpcomingTest.cy.js",
      "file": "cypress\\e2e\\actorUpcomingTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ce45816-b0b8-4403-93d0-0c2e5bc3ff9d",
          "title": "Brite Test Frontend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test actors upcoming in pre-production",
              "fullTitle": "Brite Test Frontend Test actors upcoming in pre-production",
              "timedOut": null,
              "duration": 58953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "landingPage.searchBar('Nicolas Cage');\nlandingPage.searchResults();\ncelebrityProfilePage.upcomingProjects('Pre-production');",
              "err": {},
              "uuid": "a5818da2-3272-4d1d-95a1-4158999b9457",
              "parentUUID": "3ce45816-b0b8-4403-93d0-0c2e5bc3ff9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5818da2-3272-4d1d-95a1-4158999b9457"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}